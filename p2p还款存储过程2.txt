create or replace procedure get_investor_info(t_loansid in number,refundinfo out varchar2)
is
 investorid number;--投资人ID
 t_investmoney number;--投资金额
 t_loansinterstrate number;--贷款利率
 maxrefundtime number; --还款期限
 loanid number; --贷款人ID
 loanstate number;--贷款状态
 loansmoneys number;--贷款金额
 refundtime date;--还款时间
 availmoneys number;--贷款人账户中的代还金额
 repay number;--借款人应还金额
 t_investmentid number; --投资编号
 days number;--逾期天数
 --定义一个游标
 cursor csr_invest(t_loansid number) is select userid,investmentmoney,interestrate,investmentid into investorid,t_investmoney,t_loansinterstrate,t_investmentid from tb_investment where loansid=t_loansid;      
 t_csr_invest csr_invest%rowtype;--定义行级变量
 update_exception exception;
begin
  --根据贷款ID查询出贷款人ID和贷款状态，换款时间,贷款金额
  select userid,loansstate,loansmoney,refunddeadline,loansinterestrate,tdate into loanid,loanstate,loansmoneys,maxrefundtime,t_loansinterstrate,refundtime from tb_loans where loansid = t_loansid;
  --查询贷款人账户中的待还金额
  select  availmoney into availmoneys from tb_useraccount where userinformationid = (select userinformationid from tb_userinformation where userid=loanid);
  --查询逾期天数
  select trunc(sysdate)-trunc(tdate) into days from tb_loans where loansid=t_loansid;
  --判断本贷款是否处于还款中
  if loanstate=4 or loanstate=10 then
    if loanstate=4 then 
      --计算出贷款人到期后应还的本金加利息
      repay:=loansmoneys+loansmoneys*t_loansinterstrate*0.01*maxrefundtime/12;
    else
      --计算出贷款人到期后应还的本金加利息
      repay:=loansmoneys+loansmoneys*t_loansinterstrate*0.01*maxrefundtime/12+loansmoneys*t_loansinterstrate*0.01*days/365;
    end if;
    if(availmoneys>=repay) then
    	--修改贷款人账户的可用余额（扣除贷款的本金加利息）和待还金额（用户还款没结束不能进行第二次贷款，所以money修改为0）
       update tb_useraccount set accounmoney=accounmoney-repay,availmoney=availmoney-repay,money=0,lineofcredit=50000 where userinformationid = (select userinformationid from tb_userinformation where userid=loanid);
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --修改贷款状态
       update tb_loans set loansstate=11 where loansid=t_loansid;
        --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --更新资金池
       update tb_money set money=money+repay;
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --贷款人还款的时候，向平台的资金记录表添加一条数据
        insert into tb_company_money_record (recordid,loansid,moneychangetype,changemoney,changetime,availmoney) values (seq_tb_moneypool_id.nextval,t_loansid,1,repay,sysdate,(select money from tb_money));
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --贷款人还款的时候，向个人的资金记录表添加一条数据
       insert into tb_moneyrecord (moneyrecord,watercoursetime,watercoursetype,watercoursemoney,userid,chargeway,balance) values
         (seq_tb_moneyrecord_id.nextval,sysdate,'还款',repay,loanid,'银行卡',(select a.availmoney from tb_useraccount a
         join tb_userinformation b on a.userinformationid=b.userinformationid
         where b.userid=loanid));
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
        --给本次贷款人员发送的系统消息
         insert into tb_message (messageid,messagecontent,sendtime,userid,messagetype)
         values(seq_tb_message_id.nextval,'尊敬的客户，您好,您的编号为'||t_loansid||'的'||loansmoneys||'元贷款已自动扣款成功。如有疑问，请联系我们，我们一定为您解答',sysdate,loanid,'还款');
        --显示引发异常
         if sql%notfound then raise update_exception; end if;
       if loanstate =4 then
         --更新资金池
         update tb_money set money=money-repay;
         --显示引发异常
         if sql%notfound then raise update_exception; end if;
         --给投资人回款的时候，向平台的资金记录表添加一条数据
         insert into tb_company_money_record (recordid,loansid,moneychangetype,changemoney,changetime,availmoney) values (seq_tb_moneypool_id.nextval,t_loansid,3,repay,sysdate,(select money from tb_money));
         --显示引发异常
         if sql%notfound then raise update_exception; end if;
         -- 打开游标
         open csr_invest(t_loansid);
           --循环取数据
           loop
             --取一行数据
             fetch csr_invest into t_csr_invest;
             --判断
             exit when csr_invest%notfound;
                --修改投资人账户中的可用余额（投资的本金加利息返还给投资人）和待收本金和待收利息（已经回款了，待收本机和待收利息都要相应的减少）
                update tb_useraccount set accounmoney=accounmoney+t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,availmoney=availmoney+t_csr_invest.investmentmoney+
                      t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,awaitinterest=awaitinterest-t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,awaitmoney=awaitmoney-t_csr_invest.investmentmoney, 
                      accruedincome=accruedincome+t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12 where userinformationid =(select userinformationid from tb_userinformation where userid=t_csr_invest.userid);
                --显示引发异常
                if sql%notfound then raise update_exception; end if;
                --给本次投资人发送的消息
                insert into tb_message(messageid,messagecontent,sendtime,userid,messagetype) values
                       (seq_tb_message_id.nextval,'尊敬的客户，您好，您的编号为'||t_csr_invest.investmentid||'的'||t_csr_invest.investmentmoney||'元投资款已回款成功，请注意查收。如有疑问，请联系我们，我们一定为您解答',
                        sysdate,t_csr_invest.userid,'回款');
                --显示引发异常
                if sql%notfound then raise update_exception; end if;
                --贷款人回款的时候，向每个投资人的资金记录表添加一条数据
                insert into tb_moneyrecord (moneyrecord,watercoursetime,watercoursetype,watercoursemoney,userid,chargeway,balance) values
                       (seq_tb_moneyrecord_id.nextval,sysdate,'回款',t_csr_invest.investmentmoney+t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,t_csr_invest.userid,'银行卡',(select a.availmoney from tb_useraccount a
         join tb_userinformation b on a.userinformationid=b.userinformationid
         where b.userid=t_csr_invest.userid));
                --显示引发异常
                if sql%notfound then raise update_exception; end if;
            end loop;
          --向还款表中插入数据，还款成功
          insert into tb_refund (refundid,loansid,refundmoney,refunddate,auditstate) values (seq_tb_refund_id.nextval,t_loansid,repay,sysdate,1);
          --显示引发异常
          if sql%notfound then raise update_exception; end if;
          --关闭游标
          close csr_invest; 
          else 
            --修改还款表中的还款状态为还款成功 
            update tb_refund set auditstate=2 where loansid=t_loansid;
          --显示引发异常
          if sql%notfound then raise update_exception; end if;
          
       end if;
     --保存
     commit;
     refundinfo:='还款成功';
     return;
     
     --判断已经逾期，但是余额仍然不足
     elsif loanstate=10 then
     --给本次贷款人员发送的系统消息
       insert into tb_message (messageid,messagecontent,sendtime,userid,messagetype)
       values(seq_tb_message_id.nextval,'尊敬的客户，您好,您的编号为'||t_loansid||'的'||loansmoneys||'元贷款，因为余额不足，导致自动扣款失败，如果不及时还款将产生高额的逾期费用，请尽快充值并手动还款。
       如有疑问，请联系我们，我们一定为您解答',sysdate,loanid,'逾期');
       commit;
     refundinfo:='逾期还款';
     return;
     
     --没有逾期，但是余额不足
    else
       --如果贷款人账户资金不够的话，从资金池拿钱给投资人回款
       --修改本次贷款的状态为逾期
       update tb_loans set loansstate=10 where loansid=t_loansid;
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --给本次贷款人员发送的系统消息
       insert into tb_message (messageid,messagecontent,sendtime,userid,messagetype)
       values(seq_tb_message_id.nextval,'尊敬的客户，您好,您的编号为'||t_loansid||'的'||loansmoneys||'元贷款，因为余额不足，导致自动扣款失败，如果不及时还款将产生高额的逾期费用，请尽快充值并手动还款。
       如有疑问，请联系我们，我们一定为您解答',sysdate,loanid,'逾期');
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --从资金池取出贷款人要还的金额
       update tb_money set money=money-repay;
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --向平台的资金记录表添加一条数据
       insert into tb_company_money_record (recordid,loansid,moneychangetype,changemoney,changetime,availmoney) values (seq_tb_moneypool_id.nextval,t_loansid,4,repay,sysdate,(select money from tb_money));
       --显示引发异常
        if sql%notfound then raise update_exception; end if;
       --打开游标
      open csr_invest(t_loansid);
      --循环取数据
      loop
        --取一行数据
        fetch csr_invest into t_csr_invest;
        --判断
        exit when csr_invest%notfound;
        --修改投资人账户中的可用余额（投资的本金加利息返还给投资人）和待收本金和待收利息（已经回款了，待收本机和待收利息都要相应的减少）
        update tb_useraccount set accounmoney=accounmoney+t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,availmoney=availmoney+t_csr_invest.investmentmoney+
              t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,awaitinterest=awaitinterest-t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,awaitmoney=awaitmoney-t_csr_invest.investmentmoney 
              where userinformationid =(select userinformationid from tb_userinformation where userid=t_csr_invest.userid);
        --显示引发异常
        if sql%notfound then raise update_exception; end if;
        --给本次投资人发送的消息
        insert into tb_message(messageid,messagecontent,sendtime,userid,messagetype) values
          (seq_tb_message_id.nextval,'尊敬的客户，您好，您的编号为'||t_csr_invest.investmentid||'的'||t_csr_invest.investmentmoney||'元投资款已回款成功，请注意查收。如有疑问，请联系我们，我们一定为您解答',
           sysdate,t_csr_invest.userid,'回款');
        --显示引发异常
        if sql%notfound then raise update_exception; end if;
        --贷款人回款的时候，向每个投资人的资金记录表添加一条数据
        insert into tb_moneyrecord (moneyrecord,watercoursetime,watercoursetype,watercoursemoney,userid,chargeway,balance) values
           (seq_tb_moneyrecord_id.nextval,sysdate,'回款',t_csr_invest.investmentmoney+t_csr_invest.investmentmoney*t_loansinterstrate*0.01*maxrefundtime/12,t_csr_invest.userid,'银行卡',(select a.availmoney from tb_useraccount a
         join tb_userinformation b on a.userinformationid=b.userinformationid
         where b.userid=t_csr_invest.userid));
        --显示引发异常
        if sql%notfound then raise update_exception; end if;
     end loop;
     --关闭游标
     close csr_invest;
     --向还款表中插入数据
     insert into tb_refund (refundid,loansid,refundmoney,refunddate,auditstate) values (seq_tb_refund_id.nextval,t_loansid,repay,sysdate,2);
     --显示引发异常
        if sql%notfound then raise update_exception; end if;
      commit;
      refundinfo:='还款失败';
      return;
    end if;
  else
      refundinfo:='不能还款';
      return;
  end if;
  exception
   when no_data_found then
     refundinfo:='贷款不存在'; 
   when update_exception then 
     rollback;
   when others then 
     refundinfo:='系统出错了';
     rollback;
 end;
